{"name": "测试数据：【 135，123456，1350001001，1，深圳市宝安区，False，4008，手机号格式不正确】", "status": "broken", "statusDetails": {"message": "json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)", "trace": "self = <testcases.api_test.test_04_update_user.TestUpdate object at 0x10f947cd0>\nlogin_fixture = {'code': 1003, 'msg': '用户名不存在！！！'}, id = 135\nnew_password = '123456', new_telephone = '1350001001', new_sex = '1'\nnew_address = '深圳市宝安区', except_result = False, except_code = 4008\nexcept_msg = '手机号格式不正确'\n\n    @allure.story(\"用例--修改用户信息\")\n    @allure.description(\"该用例是针对获取用户修改接口的测试\")\n    @allure.issue(\"https://blog.csdn.net/\", name=\"点击，跳转到对应BUG的链接地址\")\n    @allure.testcase(\"https://blog.csdn.net/\", name=\"点击，跳转到对应用例的链接地址\")\n    @allure.title(\n        \"测试数据：【 {id}，{new_password}，{new_telephone}，{new_sex}，{new_address}，{except_result}，{except_code}，{except_msg}】\")\n    @pytest.mark.single\n    @pytest.mark.parametrize(\"id, new_password, new_telephone, new_sex, new_address, \"\n                             \"except_result, except_code, except_msg\",\n                             api_data[\"test_update_user\"])\n    @pytest.mark.usefixtures(\"update_user_telephone\")\n    def test_update_user(self, login_fixture, id, new_password, new_telephone, new_sex, new_address,\n                         except_result, except_code, except_msg):\n        logger.info(\"*************** 开始执行用例 ***************\")\n        user_info = login_fixture\n        admin_user = user_info.get(\"username\")\n        # admin_user = user_info.get(\"login_info\").get(\"username\")\n        token = user_info.get(\"token\")\n        # token = user_info.get(\"login_info\").get(\"token\")\n        step_login(admin_user, token)\n>       result = update_user(id, admin_user, new_password, new_telephone, token, new_sex, new_address)\n\ntestcases/api_test/test_04_update_user.py:44: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \noperation/user.py:129: in update_user\n    if res.json()[\"code\"] == 0:\n.venv/lib/python3.9/site-packages/requests/models.py:897: in json\n    return complexjson.loads(self.text, **kwargs)\n/Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x10eef7d60>\ns = '<!doctype html>\\n<html lang=en>\\n  <head>\\n    <title>AttributeError: &#39;NoneType&#39; object has no attribute &#39....get(\"admin_user\", \"\").strip() # 当前登录的管理员用户\\nAttributeError: \\'NoneType\\' object has no attribute \\'strip\\'\\n\\n\\n-->\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/json/decoder.py:355: JSONDecodeError"}, "description": "该用例是针对获取用户修改接口的测试", "steps": [{"name": "前置登录步骤 ==>> 管理员登录", "status": "passed", "parameters": [{"name": "admin_user", "value": "None"}, {"name": "token", "value": "None"}], "start": 1744990901474, "stop": 1744990901474}], "attachments": [{"name": "log", "source": "b79e0e8b-f233-47db-9eb9-dd052934c53d-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "775d55ed-a493-4277-9b30-186fa0d48e34-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "id", "value": "135"}, {"name": "new_password", "value": "'123456'"}, {"name": "new_telephone", "value": "'1350001001'"}, {"name": "new_sex", "value": "'1'"}, {"name": "new_address", "value": "'深圳市宝安区'"}, {"name": "except_result", "value": "False"}, {"name": "except_code", "value": "4008"}, {"name": "except_msg", "value": "'手机号格式不正确'"}], "start": 1744990901474, "stop": 1744990901550, "uuid": "0a7c53bb-fb33-49e6-abdc-a3d649df3c5c", "historyId": "1c7d0feec7d86d034dd779b027a4d5e5", "testCaseId": "6ac2471905e3fb58977e6583fe072400", "fullName": "testcases.api_test.test_04_update_user.TestUpdate#test_update_user", "labels": [{"name": "feature", "value": "用户修改模块"}, {"name": "severity", "value": "normal"}, {"name": "epic", "value": "针对单个接口的测试"}, {"name": "story", "value": "用例--修改用户信息"}, {"name": "tag", "value": "single"}, {"name": "parentSuite", "value": "testcases.api_test"}, {"name": "suite", "value": "test_04_update_user"}, {"name": "subSuite", "value": "TestUpdate"}, {"name": "host", "value": "192.168.10.5"}, {"name": "thread", "value": "42771-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.api_test.test_04_update_user"}], "links": [{"type": "test_case", "url": "https://blog.csdn.net/", "name": "点击，跳转到对应用例的链接地址"}, {"type": "issue", "url": "https://blog.csdn.net/", "name": "点击，跳转到对应BUG的链接地址"}]}