{"uid":"8bf7b2d26099bf9d","name":"测试数据：【 测试test，123456，13599999999，1，深圳市宝安区，True，0，注册成功】","fullName":"testcases.api_test.test_02_register.TestUserRegister#test_register_user","historyId":"ec66566ff875811458619765e31fd0d6","time":{"start":1744699122012,"stop":1744699122082,"duration":70},"description":"该用例是针对获取用户注册接口的测试","descriptionHtml":"<p>该用例是针对获取用户注册接口的测试</p>\n","status":"failed","statusMessage":"AssertionError: 接口返回码是 【 2005 】, 返回信息：手机号已被注册！！！ \nassert False == True\n +  where False = <core.result_base.ResultBase object at 0x10a191d60>.success","statusTrace":"self = <testcases.api_test.test_02_register.TestUserRegister object at 0x10a19bf70>\nusername = '测试test', password = '123456', telephone = '13599999999', sex = '1'\naddress = '深圳市宝安区', except_result = True, except_code = 0, except_msg = '注册成功'\n\n    @allure.story(\"用例--注册用户信息\")\n    @allure.description(\"该用例是针对获取用户注册接口的测试\")\n    @allure.issue(\"https://www.cnblogs.com/wintest\", name=\"点击，跳转到对应BUG的链接地址\")\n    @allure.testcase(\"https://www.cnblogs.com/wintest\", name=\"点击，跳转到对应用例的链接地址\")\n    @allure.title(\n        \"测试数据：【 {username}，{password}，{telephone}，{sex}，{address}，{except_result}，{except_code}，{except_msg}】\")\n    @pytest.mark.single\n    @pytest.mark.parametrize(\"username, password, telephone, sex, address, except_result, except_code, except_msg\",\n                             api_data[\"test_register_user\"])\n    @pytest.mark.usefixtures(\"delete_register_user\")\n    def test_register_user(self, username, password, telephone, sex, address, except_result, except_code, except_msg):\n        logger.info(\"*************** 开始执行用例 ***************\")\n        result = register_user(username, password, telephone, sex, address)\n        step_1(username, password, telephone, sex, address)\n>       assert result.success == except_result, result.error\nE       AssertionError: 接口返回码是 【 2005 】, 返回信息：手机号已被注册！！！ \nE       assert False == True\nE        +  where False = <core.result_base.ResultBase object at 0x10a191d60>.success\n\ntestcases/api_test/test_02_register.py:33: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"delete_register_user","time":{"start":1744699121932,"stop":1744699121992,"duration":60},"status":"passed","steps":[{"name":"前置步骤 ==>> 清理数据","time":{"start":1744699121986,"stop":1744699121990,"duration":4},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false}],"attachments":[],"parameters":[],"stepsCount":1,"hasContent":true,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false}],"testStage":{"description":"该用例是针对获取用户注册接口的测试","status":"failed","statusMessage":"AssertionError: 接口返回码是 【 2005 】, 返回信息：手机号已被注册！！！ \nassert False == True\n +  where False = <core.result_base.ResultBase object at 0x10a191d60>.success","statusTrace":"self = <testcases.api_test.test_02_register.TestUserRegister object at 0x10a19bf70>\nusername = '测试test', password = '123456', telephone = '13599999999', sex = '1'\naddress = '深圳市宝安区', except_result = True, except_code = 0, except_msg = '注册成功'\n\n    @allure.story(\"用例--注册用户信息\")\n    @allure.description(\"该用例是针对获取用户注册接口的测试\")\n    @allure.issue(\"https://www.cnblogs.com/wintest\", name=\"点击，跳转到对应BUG的链接地址\")\n    @allure.testcase(\"https://www.cnblogs.com/wintest\", name=\"点击，跳转到对应用例的链接地址\")\n    @allure.title(\n        \"测试数据：【 {username}，{password}，{telephone}，{sex}，{address}，{except_result}，{except_code}，{except_msg}】\")\n    @pytest.mark.single\n    @pytest.mark.parametrize(\"username, password, telephone, sex, address, except_result, except_code, except_msg\",\n                             api_data[\"test_register_user\"])\n    @pytest.mark.usefixtures(\"delete_register_user\")\n    def test_register_user(self, username, password, telephone, sex, address, except_result, except_code, except_msg):\n        logger.info(\"*************** 开始执行用例 ***************\")\n        result = register_user(username, password, telephone, sex, address)\n        step_1(username, password, telephone, sex, address)\n>       assert result.success == except_result, result.error\nE       AssertionError: 接口返回码是 【 2005 】, 返回信息：手机号已被注册！！！ \nE       assert False == True\nE        +  where False = <core.result_base.ResultBase object at 0x10a191d60>.success\n\ntestcases/api_test/test_02_register.py:33: AssertionError","steps":[{"name":"步骤1 ==>> 注册用户","time":{"start":1744699122081,"stop":1744699122082,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"username","value":"'测试test'"},{"name":"password","value":"'123456'"},{"name":"telephone","value":"'13599999999'"},{"name":"sex","value":"'1'"},{"name":"address","value":"'深圳市宝安区'"}],"stepsCount":0,"hasContent":true,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false}],"attachments":[{"uid":"fa5a208f16320e1e","name":"log","source":"fa5a208f16320e1e.txt","type":"text/plain","size":1620},{"uid":"6e364122fb8ed726","name":"stderr","source":"6e364122fb8ed726.txt","type":"text/plain","size":1999}],"parameters":[],"stepsCount":1,"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":2,"attachmentStep":false},"afterStages":[{"name":"delete_register_user::0","time":{"start":1744699122211,"stop":1744699122276,"duration":65},"status":"passed","steps":[{"name":"后置步骤 ==>> 清理数据","time":{"start":1744699122270,"stop":1744699122275,"duration":5},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false}],"attachments":[],"parameters":[],"stepsCount":1,"hasContent":true,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false}],"labels":[{"name":"severity","value":"normal"},{"name":"epic","value":"针对单个接口的测试"},{"name":"story","value":"用例--注册用户信息"},{"name":"feature","value":"用户注册模块"},{"name":"tag","value":"single"},{"name":"parentSuite","value":"testcases.api_test"},{"name":"suite","value":"test_02_register"},{"name":"subSuite","value":"TestUserRegister"},{"name":"host","value":"192.168.10.5"},{"name":"thread","value":"23339-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcases.api_test.test_02_register"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"address","value":"'深圳市宝安区'"},{"name":"except_code","value":"0"},{"name":"except_msg","value":"'注册成功'"},{"name":"except_result","value":"True"},{"name":"password","value":"'123456'"},{"name":"sex","value":"'1'"},{"name":"telephone","value":"'13599999999'"},{"name":"username","value":"'测试test'"}],"links":[{"name":"点击，跳转到对应用例的链接地址","url":"https://www.cnblogs.com/wintest","type":"test_case"},{"name":"点击，跳转到对应BUG的链接地址","url":"https://www.cnblogs.com/wintest","type":"issue"}],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["single"]},"source":"8bf7b2d26099bf9d.json","parameterValues":["'深圳市宝安区'","0","'注册成功'","True","'123456'","'1'","'13599999999'","'测试test'"]}