{"uid":"577c93f6989455f7","name":"用户注册登录修改--预期成功","fullName":"testcases.scenario_test.test_02_register_login_update.TestRegLogUpdate#test_user_register_login_update_success","historyId":"11f7876c4ea7e7bac4a1a56516f91e08","time":{"start":1744985835337,"stop":1744985835494,"duration":157},"description":"该用例是针对 注册-登录-修改 场景的测试","descriptionHtml":"<p>该用例是针对 注册-登录-修改 场景的测试</p>\n","status":"failed","statusMessage":"AssertionError: 接口返回码是 【 1003 】, 返回信息：用户名不存在！！！ \nassert False is True\n +  where False = <core.result_base.ResultBase object at 0x110c04580>.success","statusTrace":"self = <testcases.scenario_test.test_02_register_login_update.TestRegLogUpdate object at 0x110cb5940>\ntestcase_data = {'except_code': 0, 'except_msg': '修改用户信息成功', 'except_result': True, 'login': {'admin_pwd': '123456', 'admin_user': 'wintest'}, ...}\n\n    @allure.story(\"用例--注册/登录/修改--预期成功\")\n    @allure.description(\"该用例是针对 注册-登录-修改 场景的测试\")\n    @allure.issue(\"https://blog.csdn.net/\", name=\"点击，跳转到对应BUG的链接地址\")\n    @allure.testcase(\"https://blog.csdn.net/\", name=\"点击，跳转到对应用例的链接地址\")\n    @allure.title(\"用户注册登录修改--预期成功\")\n    @pytest.mark.multiple\n    @pytest.mark.usefixtures(\"delete_register_user\")\n    def test_user_register_login_update_success(self, testcase_data):\n        username = testcase_data[\"register\"][\"username\"]\n        password = testcase_data[\"register\"][\"password\"]\n        telephone = testcase_data[\"register\"][\"telephone\"]\n        sex = testcase_data[\"register\"][\"sex\"]\n        address = testcase_data[\"register\"][\"address\"]\n        admin_user = testcase_data[\"login\"][\"admin_user\"]\n        admin_pwd = testcase_data[\"login\"][\"admin_pwd\"]\n        new_password = testcase_data[\"update\"][\"new_password\"]\n        new_telephone = testcase_data[\"update\"][\"new_telephone\"]\n        new_sex = testcase_data[\"update\"][\"new_sex\"]\n        new_address = testcase_data[\"update\"][\"new_address\"]\n        except_result = testcase_data[\"except_result\"]\n        except_code = testcase_data[\"except_code\"]\n        except_msg = testcase_data[\"except_msg\"]\n        logger.info(\"*************** 开始执行用例 ***************\")\n        result = register_user(username, password, telephone, sex, address)  # 注册\n        step_1(username, password, telephone, sex, address)\n        assert result.success is True, result.error\n        result = login_user(admin_user, admin_pwd)  # 登录\n        step_2(admin_user)\n>       assert result.success is True, result.error\nE       AssertionError: 接口返回码是 【 1003 】, 返回信息：用户名不存在！！！ \nE       assert False is True\nE        +  where False = <core.result_base.ResultBase object at 0x110c04580>.success\n\ntestcases/scenario_test/test_02_register_login_update.py:60: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"delete_register_user","time":{"start":1744985835267,"stop":1744985835337,"duration":70},"status":"passed","steps":[{"name":"前置步骤 ==>> 清理数据","time":{"start":1744985835336,"stop":1744985835336,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":1,"hasContent":true},{"name":"testcase_data","time":{"start":1744985835337,"stop":1744985835337,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":false}],"testStage":{"description":"该用例是针对 注册-登录-修改 场景的测试","status":"failed","statusMessage":"AssertionError: 接口返回码是 【 1003 】, 返回信息：用户名不存在！！！ \nassert False is True\n +  where False = <core.result_base.ResultBase object at 0x110c04580>.success","statusTrace":"self = <testcases.scenario_test.test_02_register_login_update.TestRegLogUpdate object at 0x110cb5940>\ntestcase_data = {'except_code': 0, 'except_msg': '修改用户信息成功', 'except_result': True, 'login': {'admin_pwd': '123456', 'admin_user': 'wintest'}, ...}\n\n    @allure.story(\"用例--注册/登录/修改--预期成功\")\n    @allure.description(\"该用例是针对 注册-登录-修改 场景的测试\")\n    @allure.issue(\"https://blog.csdn.net/\", name=\"点击，跳转到对应BUG的链接地址\")\n    @allure.testcase(\"https://blog.csdn.net/\", name=\"点击，跳转到对应用例的链接地址\")\n    @allure.title(\"用户注册登录修改--预期成功\")\n    @pytest.mark.multiple\n    @pytest.mark.usefixtures(\"delete_register_user\")\n    def test_user_register_login_update_success(self, testcase_data):\n        username = testcase_data[\"register\"][\"username\"]\n        password = testcase_data[\"register\"][\"password\"]\n        telephone = testcase_data[\"register\"][\"telephone\"]\n        sex = testcase_data[\"register\"][\"sex\"]\n        address = testcase_data[\"register\"][\"address\"]\n        admin_user = testcase_data[\"login\"][\"admin_user\"]\n        admin_pwd = testcase_data[\"login\"][\"admin_pwd\"]\n        new_password = testcase_data[\"update\"][\"new_password\"]\n        new_telephone = testcase_data[\"update\"][\"new_telephone\"]\n        new_sex = testcase_data[\"update\"][\"new_sex\"]\n        new_address = testcase_data[\"update\"][\"new_address\"]\n        except_result = testcase_data[\"except_result\"]\n        except_code = testcase_data[\"except_code\"]\n        except_msg = testcase_data[\"except_msg\"]\n        logger.info(\"*************** 开始执行用例 ***************\")\n        result = register_user(username, password, telephone, sex, address)  # 注册\n        step_1(username, password, telephone, sex, address)\n        assert result.success is True, result.error\n        result = login_user(admin_user, admin_pwd)  # 登录\n        step_2(admin_user)\n>       assert result.success is True, result.error\nE       AssertionError: 接口返回码是 【 1003 】, 返回信息：用户名不存在！！！ \nE       assert False is True\nE        +  where False = <core.result_base.ResultBase object at 0x110c04580>.success\n\ntestcases/scenario_test/test_02_register_login_update.py:60: AssertionError","steps":[{"name":"步骤1 ==>> 注册用户","time":{"start":1744985835427,"stop":1744985835427,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"username","value":"'测试test'"},{"name":"password","value":"'123456'"},{"name":"telephone","value":"'13599999933'"},{"name":"sex","value":"'1'"},{"name":"address","value":"'深圳市宝安区'"}],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":true},{"name":"步骤2 ==>> 登录用户","time":{"start":1744985835493,"stop":1744985835493,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"username","value":"'wintest'"}],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":true}],"attachments":[{"uid":"a533c9bbb760ac18","name":"log","source":"a533c9bbb760ac18.txt","type":"text/plain","size":2525},{"uid":"90512f521f2f132a","name":"stderr","source":"90512f521f2f132a.txt","type":"text/plain","size":3114}],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":2,"attachmentStep":false,"stepsCount":2,"hasContent":true},"afterStages":[{"name":"delete_register_user::0","time":{"start":1744985835503,"stop":1744985835577,"duration":74},"status":"passed","steps":[{"name":"后置步骤 ==>> 清理数据","time":{"start":1744985835577,"stop":1744985835577,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":1,"hasContent":true}],"labels":[{"name":"feature","value":"场景：用户注册-用户登录-修改用户"},{"name":"story","value":"用例--注册/登录/修改--预期成功"},{"name":"severity","value":"blocker"},{"name":"epic","value":"针对业务场景的测试"},{"name":"tag","value":"multiple"},{"name":"parentSuite","value":"testcases.scenario_test"},{"name":"suite","value":"test_02_register_login_update"},{"name":"subSuite","value":"TestRegLogUpdate"},{"name":"host","value":"192.168.10.5"},{"name":"thread","value":"42002-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcases.scenario_test.test_02_register_login_update"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"点击，跳转到对应用例的链接地址","url":"https://blog.csdn.net/","type":"test_case"},{"name":"点击，跳转到对应BUG的链接地址","url":"https://blog.csdn.net/","type":"issue"}],"hidden":false,"retry":false,"extra":{"severity":"blocker","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["multiple"]},"source":"577c93f6989455f7.json","parameterValues":[]}