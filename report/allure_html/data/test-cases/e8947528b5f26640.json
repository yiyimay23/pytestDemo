{"uid":"e8947528b5f26640","name":"用户注册登录删除-预期失败","fullName":"testcases.scenario_test.test_03_register_login_delete.TestRegLogDelete#test_user_register_login_delete_fail","historyId":"7164a98ce91bd9f479af2fa0b0f95820","time":{"start":1744699253587,"stop":1744699253651,"duration":64},"description":"该用例是针对 注册-登录-删除 场景的测试","descriptionHtml":"<p>该用例是针对 注册-登录-删除 场景的测试</p>\n","status":"skipped","statusMessage":"AssertionError: 接口返回码是 【 2005 】, 返回信息：手机号已被注册！！！ \nassert False is True\n +  where False = <core.result_base.ResultBase object at 0x10b53aa60>.success","statusTrace":"self = <testcases.scenario_test.test_03_register_login_delete.TestRegLogDelete object at 0x10b53aa00>\ntestcase_data = {'address': '深圳市宝安区', 'admin_pwd': '123456', 'admin_user': 'wintest4', 'except_code': 3004, ...}\n\n    @allure.story(\"用例--注册/登录/删除--预期失败\")\n    @allure.description(\"该用例是针对 注册-登录-删除 场景的测试\")\n    @allure.issue(\"https://www.cnblogs.com/wintest\", name=\"点击，跳转到对应BUG的链接地址\")\n    @allure.testcase(\"https://www.cnblogs.com/wintest\", name=\"点击，跳转到对应用例的链接地址\")\n    @allure.title(\"用户注册登录删除-预期失败\")\n    @pytest.mark.negative\n    @pytest.mark.xfail(reason=\"xfail示例：预期失败的用例，如存在尚未解决的Bug等\")\n    @pytest.mark.usefixtures(\"delete_register_user\")\n    def test_user_register_login_delete_fail(self, testcase_data):\n        username = testcase_data[\"username\"]\n        password = testcase_data[\"password\"]\n        telephone = testcase_data[\"telephone\"]\n        sex = testcase_data[\"sex\"]\n        address = testcase_data[\"address\"]\n        admin_user = testcase_data[\"admin_user\"]\n        admin_pwd = testcase_data[\"admin_pwd\"]\n        except_result = testcase_data[\"except_result\"]\n        except_code = testcase_data[\"except_code\"]\n        except_msg = testcase_data[\"except_msg\"]\n        logger.info(\"*************** 开始执行用例 ***************\")\n        result = register_user(username, password, telephone, sex, address)\n        step_1(username, password, telephone, sex, address)\n>       assert result.success is True, result.error\nE       AssertionError: 接口返回码是 【 2005 】, 返回信息：手机号已被注册！！！ \nE       assert False is True\nE        +  where False = <core.result_base.ResultBase object at 0x10b53aa60>.success\n\ntestcases/scenario_test/test_03_register_login_delete.py:87: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":3,"retriesStatusChange":false,"beforeStages":[{"name":"delete_register_user","time":{"start":1744699253534,"stop":1744699253586,"duration":52},"status":"passed","steps":[{"name":"前置步骤 ==>> 清理数据","time":{"start":1744699253585,"stop":1744699253586,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false}],"attachments":[],"parameters":[],"stepsCount":1,"hasContent":true,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false},{"name":"testcase_data","time":{"start":1744699253586,"stop":1744699253586,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false}],"testStage":{"description":"该用例是针对 注册-登录-删除 场景的测试","status":"skipped","statusMessage":"AssertionError: 接口返回码是 【 2005 】, 返回信息：手机号已被注册！！！ \nassert False is True\n +  where False = <core.result_base.ResultBase object at 0x10b53aa60>.success","statusTrace":"self = <testcases.scenario_test.test_03_register_login_delete.TestRegLogDelete object at 0x10b53aa00>\ntestcase_data = {'address': '深圳市宝安区', 'admin_pwd': '123456', 'admin_user': 'wintest4', 'except_code': 3004, ...}\n\n    @allure.story(\"用例--注册/登录/删除--预期失败\")\n    @allure.description(\"该用例是针对 注册-登录-删除 场景的测试\")\n    @allure.issue(\"https://www.cnblogs.com/wintest\", name=\"点击，跳转到对应BUG的链接地址\")\n    @allure.testcase(\"https://www.cnblogs.com/wintest\", name=\"点击，跳转到对应用例的链接地址\")\n    @allure.title(\"用户注册登录删除-预期失败\")\n    @pytest.mark.negative\n    @pytest.mark.xfail(reason=\"xfail示例：预期失败的用例，如存在尚未解决的Bug等\")\n    @pytest.mark.usefixtures(\"delete_register_user\")\n    def test_user_register_login_delete_fail(self, testcase_data):\n        username = testcase_data[\"username\"]\n        password = testcase_data[\"password\"]\n        telephone = testcase_data[\"telephone\"]\n        sex = testcase_data[\"sex\"]\n        address = testcase_data[\"address\"]\n        admin_user = testcase_data[\"admin_user\"]\n        admin_pwd = testcase_data[\"admin_pwd\"]\n        except_result = testcase_data[\"except_result\"]\n        except_code = testcase_data[\"except_code\"]\n        except_msg = testcase_data[\"except_msg\"]\n        logger.info(\"*************** 开始执行用例 ***************\")\n        result = register_user(username, password, telephone, sex, address)\n        step_1(username, password, telephone, sex, address)\n>       assert result.success is True, result.error\nE       AssertionError: 接口返回码是 【 2005 】, 返回信息：手机号已被注册！！！ \nE       assert False is True\nE        +  where False = <core.result_base.ResultBase object at 0x10b53aa60>.success\n\ntestcases/scenario_test/test_03_register_login_delete.py:87: AssertionError","steps":[{"name":"步骤1 ==>> 注册用户","time":{"start":1744699253649,"stop":1744699253650,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"username","value":"'测试test'"},{"name":"password","value":"'123456'"},{"name":"telephone","value":"'13599999999'"},{"name":"sex","value":"'1'"},{"name":"address","value":"'深圳市宝安区'"}],"stepsCount":0,"hasContent":true,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false}],"attachments":[{"uid":"53bb632f8a2d02f8","name":"log","source":"53bb632f8a2d02f8.txt","type":"text/plain","size":1645},{"uid":"5d344b6d9cbe0260","name":"stderr","source":"5d344b6d9cbe0260.txt","type":"text/plain","size":2024}],"parameters":[],"stepsCount":1,"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":2,"attachmentStep":false},"afterStages":[{"name":"delete_register_user::0","time":{"start":1744699253659,"stop":1744699253712,"duration":53},"status":"passed","steps":[{"name":"后置步骤 ==>> 清理数据","time":{"start":1744699253711,"stop":1744699253711,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false}],"attachments":[],"parameters":[],"stepsCount":1,"hasContent":true,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false}],"labels":[{"name":"story","value":"用例--注册/登录/删除--预期失败"},{"name":"feature","value":"场景：用户注册-用户登录-删除用户"},{"name":"epic","value":"针对业务场景的测试"},{"name":"severity","value":"minor"},{"name":"tag","value":"negative"},{"name":"parentSuite","value":"testcases.scenario_test"},{"name":"suite","value":"test_03_register_login_delete"},{"name":"subSuite","value":"TestRegLogDelete"},{"name":"host","value":"192.168.10.5"},{"name":"thread","value":"23437-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcases.scenario_test.test_03_register_login_delete"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"点击，跳转到对应用例的链接地址","url":"https://www.cnblogs.com/wintest","type":"test_case"},{"name":"点击，跳转到对应BUG的链接地址","url":"https://www.cnblogs.com/wintest","type":"issue"}],"hidden":false,"retry":false,"extra":{"severity":"minor","retries":[{"uid":"ccad40f9942891b9","status":"skipped","statusDetails":"AssertionError: 接口返回码是 【 2005 】, 返回信息：手机号已被注册！！！ \nassert False is True\n +  where False = <core.result_base.ResultBase object at 0x10bc2ff40>.success","time":{"start":1744699199875,"stop":1744699199953,"duration":78}},{"uid":"5600cd894949a787","status":"skipped","statusDetails":"AssertionError: 接口返回码是 【 2005 】, 返回信息：手机号已被注册！！！ \nassert False is True\n +  where False = <core.result_base.ResultBase object at 0x10a1cfdf0>.success","time":{"start":1744699124388,"stop":1744699124482,"duration":94}},{"uid":"2a8421c34e6791ee","status":"skipped","statusDetails":"AssertionError: 接口返回码是 【 2005 】, 返回信息：手机号已被注册！！！ \nassert False is True\n +  where False = <core.result_base.ResultBase object at 0x109e7d910>.success","time":{"start":1744699042519,"stop":1744699042572,"duration":53}}],"categories":[],"tags":["negative"]},"source":"e8947528b5f26640.json","parameterValues":[]}