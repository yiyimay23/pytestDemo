{"uid":"6be2e65b29c1e8cf","name":"用户注册/重复注册-预期成功","fullName":"testcases.scenario_test.test_04_repeat_register.TestRepeatReg#test_user_repeat_register","historyId":"01c293d6b5196fdce6a8cb6c26807156","time":{"start":1744708531793,"stop":1744708531880,"duration":87},"description":"该用例是针对 注册-重复注册 场景的测试","descriptionHtml":"<p>该用例是针对 注册-重复注册 场景的测试</p>\n","status":"failed","statusMessage":"AssertionError: 接口返回码是 【 2005 】, 返回信息：手机号已被注册！！！ \nassert False is True\n +  where False = <core.result_base.ResultBase object at 0x1040de7f0>.success","statusTrace":"self = <testcases.scenario_test.test_04_repeat_register.TestRepeatReg object at 0x104206610>\ntestcase_data = {'address': '深圳市宝安区', 'except_code': 2002, 'except_msg': '用户名已存在，注册失败', 'except_result': False, ...}\n\n    @allure.story(\"用例--注册/重复注册--预期成功\")\n    @allure.description(\"该用例是针对 注册-重复注册 场景的测试\")\n    @allure.issue(\"https://blog.csdn.net/\", name=\"点击，跳转到对应BUG的链接地址\")\n    @allure.testcase(\"https://blog.csdn.net/\", name=\"点击，跳转到对应用例的链接地址\")\n    @allure.title(\"用户注册/重复注册-预期成功\")\n    @pytest.mark.single\n    @pytest.mark.usefixtures(\"delete_register_user\")\n    def test_user_repeat_register(self, testcase_data):\n        username = testcase_data[\"username\"]\n        password = testcase_data[\"password\"]\n        telephone = testcase_data[\"telephone\"]\n        sex = testcase_data[\"sex\"]\n        address = testcase_data[\"address\"]\n        except_result = testcase_data[\"except_result\"]\n        except_code = testcase_data[\"except_code\"]\n        except_msg = testcase_data[\"except_msg\"]\n        logger.info(\"*************** 开始执行用例 ***************\")\n        result = register_user(username, password, telephone, sex, address)\n        step_1(username, password, telephone, sex, address)\n>       assert result.success is True, result.error\nE       AssertionError: 接口返回码是 【 2005 】, 返回信息：手机号已被注册！！！ \nE       assert False is True\nE        +  where False = <core.result_base.ResultBase object at 0x1040de7f0>.success\n\ntestcases/scenario_test/test_04_repeat_register.py:41: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"delete_register_user","time":{"start":1744708531709,"stop":1744708531792,"duration":83},"status":"passed","steps":[{"name":"前置步骤 ==>> 清理数据","time":{"start":1744708531791,"stop":1744708531792,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false}],"attachments":[],"parameters":[],"stepsCount":1,"hasContent":true,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false},{"name":"testcase_data","time":{"start":1744708531792,"stop":1744708531792,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false}],"testStage":{"description":"该用例是针对 注册-重复注册 场景的测试","status":"failed","statusMessage":"AssertionError: 接口返回码是 【 2005 】, 返回信息：手机号已被注册！！！ \nassert False is True\n +  where False = <core.result_base.ResultBase object at 0x1040de7f0>.success","statusTrace":"self = <testcases.scenario_test.test_04_repeat_register.TestRepeatReg object at 0x104206610>\ntestcase_data = {'address': '深圳市宝安区', 'except_code': 2002, 'except_msg': '用户名已存在，注册失败', 'except_result': False, ...}\n\n    @allure.story(\"用例--注册/重复注册--预期成功\")\n    @allure.description(\"该用例是针对 注册-重复注册 场景的测试\")\n    @allure.issue(\"https://blog.csdn.net/\", name=\"点击，跳转到对应BUG的链接地址\")\n    @allure.testcase(\"https://blog.csdn.net/\", name=\"点击，跳转到对应用例的链接地址\")\n    @allure.title(\"用户注册/重复注册-预期成功\")\n    @pytest.mark.single\n    @pytest.mark.usefixtures(\"delete_register_user\")\n    def test_user_repeat_register(self, testcase_data):\n        username = testcase_data[\"username\"]\n        password = testcase_data[\"password\"]\n        telephone = testcase_data[\"telephone\"]\n        sex = testcase_data[\"sex\"]\n        address = testcase_data[\"address\"]\n        except_result = testcase_data[\"except_result\"]\n        except_code = testcase_data[\"except_code\"]\n        except_msg = testcase_data[\"except_msg\"]\n        logger.info(\"*************** 开始执行用例 ***************\")\n        result = register_user(username, password, telephone, sex, address)\n        step_1(username, password, telephone, sex, address)\n>       assert result.success is True, result.error\nE       AssertionError: 接口返回码是 【 2005 】, 返回信息：手机号已被注册！！！ \nE       assert False is True\nE        +  where False = <core.result_base.ResultBase object at 0x1040de7f0>.success\n\ntestcases/scenario_test/test_04_repeat_register.py:41: AssertionError","steps":[{"name":"步骤1 ==>> 注册用户","time":{"start":1744708531878,"stop":1744708531879,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"username","value":"'测试test'"},{"name":"password","value":"'123456'"},{"name":"telephone","value":"'13599999999'"},{"name":"sex","value":"'1'"},{"name":"address","value":"'深圳市宝安区'"}],"stepsCount":0,"hasContent":true,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false}],"attachments":[{"uid":"e526e00c2c7cc917","name":"log","source":"e526e00c2c7cc917.txt","type":"text/plain","size":1633},{"uid":"f3c5bdcae26ea134","name":"stderr","source":"f3c5bdcae26ea134.txt","type":"text/plain","size":2012}],"parameters":[],"stepsCount":1,"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":2,"attachmentStep":false},"afterStages":[{"name":"delete_register_user::0","time":{"start":1744708531888,"stop":1744708531971,"duration":83},"status":"passed","steps":[{"name":"后置步骤 ==>> 清理数据","time":{"start":1744708531970,"stop":1744708531971,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false}],"attachments":[],"parameters":[],"stepsCount":1,"hasContent":true,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false}],"labels":[{"name":"epic","value":"针对业务场景的测试"},{"name":"severity","value":"critical"},{"name":"story","value":"用例--注册/重复注册--预期成功"},{"name":"feature","value":"场景：用户注册-重复注册"},{"name":"tag","value":"single"},{"name":"parentSuite","value":"testcases.scenario_test"},{"name":"suite","value":"test_04_repeat_register"},{"name":"subSuite","value":"TestRepeatReg"},{"name":"host","value":"192.168.10.5"},{"name":"thread","value":"24590-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcases.scenario_test.test_04_repeat_register"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[{"name":"点击，跳转到对应用例的链接地址","url":"https://blog.csdn.net/","type":"test_case"},{"name":"点击，跳转到对应BUG的链接地址","url":"https://blog.csdn.net/","type":"issue"}],"hidden":false,"retry":false,"extra":{"severity":"critical","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["single"]},"source":"6be2e65b29c1e8cf.json","parameterValues":[]}